apply plugin: 'com.android.application'

android {
    compileSdkVersion 24
    buildToolsVersion '24.0.2'
    compileOptions {
        encoding "UTF-8"
    }
    defaultConfig {
        applicationId "me.devsaki.hentoid"
        minSdkVersion 15
        targetSdkVersion 23
        versionCode 41
        versionName '1.2.1r0_alpha'
        jackOptions {
            enabled true
        }
    }
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
    packagingOptions {
        exclude 'README.md'
        exclude 'LICENSE'
        exclude 'update.json'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/DEPENDENCIES.txt'
    }
    signingConfigs {
        release
    }
    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            debuggable false
            minifyEnabled true
            shrinkResources true

            //noinspection GroovyAssignabilityCheck
            signingConfig signingConfigs.release

            // Library specific proguard files
            FileCollection proGuardFileCollection = files { file('../.proguard/').listFiles() }
            proguardFiles(proGuardFileCollection)

            // Default proguard files & project app specific rules
            //noinspection GroovyAssignabilityCheck
            proguardFile getDefaultProguardFile('proguard-android.txt')
            proguardFile 'proguard-project-app.pro'

            // As of Gradle Android plugin 1.1.0, the test APK has a separate config
            testProguardFile 'proguard-project-test.pro'
        }
    }
    lintOptions {
        lintConfig file("../lint.xml")
    }
}

def Properties props = new Properties()
def propFile = new File('.signing/signing.properties')
if (propFile.canRead()) {
    props.load(new FileInputStream(propFile))

    if (props != null && props.containsKey('STORE_FILE') && props.containsKey('STORE_PASSWORD')
            && props.containsKey('KEY_ALIAS') && props.containsKey('KEY_PASSWORD')) {
        android.signingConfigs.release.storeFile = file(props['STORE_FILE'])
        android.signingConfigs.release.storePassword = props['STORE_PASSWORD']
        android.signingConfigs.release.keyAlias = props['KEY_ALIAS']
        android.signingConfigs.release.keyPassword = props['KEY_PASSWORD']
    } else {
        println 'signing.properties found but some entries are missing'
        android.buildTypes.release.signingConfig = null
    }
} else {
    println 'signing.properties not found'
    android.buildTypes.release.signingConfig = null
}

dependencies {
    // Compile any included libraries
    compile fileTree(include: ['*jar'], dir: 'libs')
    // Tests
    // junit: github.com/junit-team/junit4/wiki/Use-with-Gradle
    testCompile 'junit:junit:4.12'
    // Support libraries
    compile 'com.android.support:appcompat-v7:24.2.0'
    compile 'com.android.support:cardview-v7:24.2.0'
    compile 'com.android.support:design:24.2.0'
    compile 'com.android.support:recyclerview-v7:24.2.0'
    compile 'com.android.support:support-v4:24.2.0'
    // Material Dialogs: github.com/afollestad/material-dialogs
    compile 'com.afollestad.material-dialogs:core:0.9.0.1'
    // Image loader: github.com/bumptech/glide
    // https://github.com/bumptech/glide/wiki/Snapshots#gradle
    compile 'com.github.bumptech.glide:glide:3.8.0-SNAPSHOT'
    // Integrate with OkHttp: github.com/bumptech/glide/wiki/Integration-Libraries#okhttp-3
    compile 'com.github.bumptech.glide:okhttp3-integration:1.5.0-SNAPSHOT'
    // Intro screens or slides: github.com/PaoloRotolo/AppIntro
    compile 'com.github.paolorotolo:appintro:4.0.0'
    // Google Play Services Analytics: developers.google.com/android/guides/setup
    compile 'com.google.android.gms:play-services-analytics:9.4.0'
    // Java serialization/deserialization (Java Objects into JSON and back): github.com/google/gson
    compile 'com.google.code.gson:gson:2.7'
    // Download app updates (without user prompts): github.com/smanikandan14/ThinDownloadManager
    compile 'com.mani:ThinDownloadManager:1.2.5'
    // Additional Support Libraries
    // HTTP & HTTP/2 client: github.com/square/okhttp
    compile 'com.squareup.okhttp3:okhttp:3.4.1'
    // IO functionality: commons.apache.org/proper/commons-io/
    compile 'commons-io:commons-io:2.5'
    // EventBus: github.com/greenrobot/EventBus
    compile 'org.greenrobot:eventbus:3.0.0'
    // JSOUP HTML parser: jsoup.org/download
    compile 'org.jsoup:jsoup:1.9.2'
    // RxAndroid (RxJava bindings for Android): github.com/ReactiveX/RxAndroid
    compile 'io.reactivex:rxandroid:1.2.1'
    // Because RxAndroid releases are few and far between, it is recommended you also
    // explicitly depend on RxJava's latest version for bug fixes and new features.
    compile 'io.reactivex:rxjava:1.1.9'
}

apply plugin: 'com.google.gms.google-services'
