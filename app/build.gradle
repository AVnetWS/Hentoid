apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'org.sonarqube'
apply plugin: 'com.google.firebase.crashlytics'

// apply signing configuration if config file exists
if (file('signing.gradle').exists()) {
    apply from: 'signing.gradle'
}

android {
    compileSdkVersion 29
    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }
    buildToolsVersion "29.0.3"
    defaultConfig {
        applicationId "me.devsaki.hentoid"
        minSdkVersion 21
        //noinspection ExpiringTargetSdkVersion
        targetSdkVersion 29
        versionCode 130 // is updated automatically by BitRise; only used when building locally
        versionName '1.13.0-dev'

        def fkToken = '\"' + (System.getenv("FK_TOKEN")?: "") + '\"'
        def includeObjectBoxBrowser = System.getenv("INCLUDE_OBJECTBOX_BROWSER") ?: "false"

        buildConfigField "String", "FK_TOKEN", fkToken
        buildConfigField "boolean", "INCLUDE_OBJECTBOX_BROWSER", includeObjectBoxBrowser

        proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

        renderscriptTargetApi 21
        renderscriptSupportModeEnabled false
    }
    buildTypes {
        debug {
            minifyEnabled true
            applicationIdSuffix ".debug"
            versionNameSuffix "-DEBUG"

            buildConfigField 'String', 'UPDATE_URL', '"https://raw.githubusercontent.com/avluis/Hentoid/dev/app/"'

            proguardFile 'proguard-rules-debug.pro'
        }
        release {
            debuggable false
            minifyEnabled true

            buildConfigField 'String', 'UPDATE_URL', '"https://raw.githubusercontent.com/avluis/Hentoid/master/app/"'

            proguardFile 'proguard-rules-release.pro'
            testProguardFile 'proguard-rules-test.pro'

            // Library specific proguard files
            proguardFiles fileTree(dir: '../.proguard', include: ['*.pro']).asList().toArray()
        }
    }
    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }
}

dependencies {
    def includeObjectBoxBrowser = System.getenv("INCLUDE_OBJECTBOX_BROWSER") ?: "false"

    // Compile any included libraries
    implementation fileTree(include: ['*jar'], dir: 'libs')
    implementation fileTree(include: ['*aar'], dir: 'libs')

    implementation project(':fakkuLib')

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:3.5.13'
    testImplementation 'io.kotlintest:kotlintest-assertions:3.4.2'
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.4.10"

    // Firebase
    implementation 'com.google.firebase:firebase-analytics:17.6.0'

    // Crashlytics
    implementation 'com.google.firebase:firebase-crashlytics:17.2.2'

    // Support libraries
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    //implementation 'com.google.android.material:material:1.0.0'
    implementation 'com.google.android.material:material:1.1.0-alpha08'
    implementation 'androidx.preference:preference:1.1.1'
    implementation 'androidx.media:media:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3' // Won't bump until RecyclerView 1.2 is out of beta stage
    implementation 'androidx.legacy:legacy-support-v13:1.0.0'
    implementation 'com.google.android.gms:play-services-safetynet:17.0.0'
    implementation 'androidx.paging:paging-runtime:2.1.2'
    implementation "androidx.fragment:fragment-ktx:1.2.5"
    implementation "androidx.documentfile:documentfile:1.0.1" // <-- if this evolves, please examine FileUtil.fromTreeUriOptimized for evolutions
    implementation "androidx.viewpager2:viewpager2:1.0.0"

    // For ViewModel to work
    def android_lifecycle_version = "2.2.0"
    implementation "androidx.lifecycle:lifecycle-extensions:$android_lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel:$android_lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$android_lifecycle_version"
    kapt("androidx.lifecycle:lifecycle-common-java8:$android_lifecycle_version")


    // Image loader: github.com/bumptech/glide
    def glide_version = "4.11.0"
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt("com.github.bumptech.glide:compiler:$glide_version")
    implementation "com.github.bumptech.glide:okhttp3-integration:$glide_version"

    // Intro screens or slides: github.com/apl-devs/AppIntro
    implementation 'com.github.AppIntro:AppIntro:6.0.0'

    // Java serialization/deserialization (Java Objects into JSON and back): https://github.com/square/moshi
    def moshi_version = "1.9.2"
    implementation "com.squareup.moshi:moshi:$moshi_version"
    implementation "com.squareup.moshi:moshi-adapters:$moshi_version"

    // Timber (Extensible Logger): github.com/JakeWharton/timber
    implementation 'com.jakewharton.timber:timber:4.7.1'

    // Download app updates (without user prompts): github.com/smanikandan14/ThinDownloadManager
    implementation 'com.mani:ThinDownloadManager:1.3.0'

    // HTTP & HTTP/2 client: github.com/square/okhttp
    implementation 'com.squareup.okhttp3:okhttp:4.9.0'

    // For downloading images : github.com/google/volley
    implementation 'com.android.volley:volley:1.1.1' // <-- if this evolves, please examine RequestQueueManager.getRequestQueue for evolutions

    // EventBus: github.com/greenrobot/EventBus
    implementation 'org.greenrobot:eventbus:3.2.0'

    // JSOUP HTML parser: github.com/jhy/jsoup
    implementation 'org.jsoup:jsoup:1.11.3'

    // Lightweight Stream : github.com/aNNiMON/Lightweight-Stream-API
    implementation 'com.annimon:stream:1.2.1'

    // LeakCanary: github.com/square/leakcanary
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.2'

    // Specific UI layout for tag mosaic : github.com/google/flexbox-layout
    implementation 'com.google.android:flexbox:2.0.0'

    // https://mvnrepository.com/artifact/commons-io/commons-io
    implementation 'commons-io:commons-io:2.6'

    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    implementation 'org.apache.commons:commons-lang3:3.9'

    // https://mvnrepository.com/artifact/org.apache.commons/commons-text/
    implementation 'org.apache.commons:commons-text:1.4' // !!! Don't update that one or Lint will go mad

    // Retrofit-ready-ready HTML parser with CSS selectors : https://github.com/DroidsOnRoids/jspoon
    def jspoon_version = "1.3.2"
    implementation "pl.droidsonroids:jspoon:$jspoon_version"
    implementation "pl.droidsonroids.retrofit2:converter-jspoon:$jspoon_version"

    //    https://github.com/square/retrofit
    def retrofit_version = "2.8.2"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"

    //    https://github.com/ReactiveX/RxJava
    implementation 'io.reactivex.rxjava2:rxjava:2.2.19'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'

    // ObjectBox browser dependencies must be set before applying ObjectBox plugin so it does not add objectbox-android
    // (would result in two conflicting versions, e.g. "Duplicate files copied in APK lib/armeabi-v7a/libobjectbox.so").
    def objectbox_version = "2.7.1"
    if (includeObjectBoxBrowser.toBoolean()) {
        debugImplementation "io.objectbox:objectbox-android-objectbrowser:$objectbox_version"
        releaseImplementation "io.objectbox:objectbox-android:$objectbox_version"
    }

    // Cleaner date manipulation
    implementation 'com.jakewharton.threetenabp:threetenabp:1.2.1'

    // Animated PNG (apng) support -> https://github.com/penfeizhou/APNG4Android
    implementation 'com.github.penfeizhou.android.animation:apng:2.4.2'

    // https://github.com/mikepenz/FastAdapter
    def fastadapter_version = "5.2.4"
    implementation "com.mikepenz:fastadapter:$fastadapter_version" // needs the `expandable`, `drag` and `scroll` extension.
    implementation "com.mikepenz:fastadapter-extensions-diff:$fastadapter_version" // diff util helpers
    implementation "com.mikepenz:fastadapter-extensions-drag:$fastadapter_version" // drag support
    implementation "com.mikepenz:fastadapter-extensions-expandable:$fastadapter_version"
    implementation "com.mikepenz:fastadapter-extensions-scroll:$fastadapter_version" // scroll helpers
    implementation "com.mikepenz:fastadapter-extensions-paged:$fastadapter_version"
    implementation "com.mikepenz:fastadapter-extensions-ui:$fastadapter_version" // needs the `expandable`, `drag` and `scroll` extension.
    implementation "com.mikepenz:fastadapter-extensions-utils:$fastadapter_version" // needs the `expandable`, `drag` and `scroll` extension.

    // Fast scroller
    implementation "me.zhanghai.android.fastscroll:library:1.1.4"

    // Popups
    implementation "com.github.skydoves:balloon:1.2.3"

    // Dropdown lists
    implementation "com.github.skydoves:powerspinner:1.1.5"

    implementation project(path: ':app:customssiv')
}

sonarqube {
    properties {
        property "sonar.projectKey", "RobbWatershed_hentoid-sonar"
        property "sonar.organization", "robbwatershed-github"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.language", "java"
        property "sonar.sources", "src/main/"
        property "sonar.login", "3d0dc80792bad95f0193e7ed626cf090ac83e208"
    }
}

apply plugin: 'com.google.gms.google-services'
apply plugin: 'io.objectbox' // apply last